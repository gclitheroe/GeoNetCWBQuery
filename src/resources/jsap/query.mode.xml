<?xml version="1.0" encoding="UTF-8"?>
<jsap>
    <parameters>
        
        <flaggedOption>
            <id>seedname</id>
            <stringParser>
                <classname>StringStringParser</classname>
            </stringParser>
            <required>true</required>
            <shortFlag>s</shortFlag>
            <longFlag>seedname</longFlag>
            <help>NSCL or REGEXP  (note: on many shells its best to put this argument in double quotes)
                NNSSSSSCCCLL to specify a seed channel name. If &lt; 12 characters, match any seednames starting
                with those characters.  Example : '-s IUA' would return all IU stations starting with 'A' (ADK,AFI,ANMO,ANTO)
                OR
                REGEXP :'.' matches any character, [ABC] means one character which is A, or B or C The regexp is right padded with '.'
                Example: '-s IUANMO.LH[ZN]..' returns the vertical and north component for LH channels at station(s) starting with 'ANMO'
                '.*' matchs zero or more following characters (include in quotes as * has many meanings!
                'AA|BB' means matches pattern AA or BB e.g.  'US.*|IU.*' matches the US and IU networks</help>
        </flaggedOption>
        
        <flaggedOption>
            <id>type</id>
            <stringParser>
                <classname>StringStringParser</classname>
            </stringParser> 
            <required>true</required>
            <shortFlag>t</shortFlag>
            <longFlag>type</longFlag>
            <defaults>
                <string>sac</string>
            </defaults>
            <help>[ms | msz | sac | dcc | dcc512 | text | null] output type.
                ms is raw blocks with gaps/overlaps (ext='.ms')
                
                msz = is data output as continuous mini-seed with filling use -fill to set other fill values (ext='.msz') can also be output as gappy miniseed with -msgaps NOTE: msz rounds times to nearest millsecond
                
                sac = is Seismic Analysis Code format (see -fill for info on nodata code) (ext='.sac')
                
                dcc = best effort reconciliation to 4096 byte mini-seed form.  Overlaps are eliminated. (ext='.msd')
                
                dcc512 = best effort reconciliation to 512 byte mini-seed form.  Overlaps are eliminated. (ext='.msd')
                
                text = simple text format with space separated values, one row per sample: 'Epoch milliseconds' 'value' This can be extremely verbose.
                
                null = do not create data file, return blocks to caller (for use from a user program)</help>
        </flaggedOption>
        
        <flaggedOption>
            <id>output</id>
            <stringParser>
                <classname>StringStringParser</classname>
            </stringParser>
            <required>true</required>
            <longFlag>output</longFlag>
            <shortFlag>o</shortFlag>
            <defaults>
                <string>%N</string>
            </defaults>
            <help>mask Put the output in the given filename described by the mask/tokens
                Tokens: (Any non-tokens will be literally in the file name)
                %N the whole seedname NNSSSSSCCCLL
                %n the two letter SEED network          %s the 5 character SEED station code
                %c the 3 character SEED channel         %l the two character location
                %y Year as 4 digits                     %Y 2 character Year
                %j Day of year (1-366)                  %J Julian day (since 1572)
                %M 2 digit month                        %D 2 digit day of month
                %h 2 digit hour                         %m 2 digit minute
                %S 2 digit second                       %z zap all underscores from name</help>
        </flaggedOption>
        
    </parameters>
</jsap>
