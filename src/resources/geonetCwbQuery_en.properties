usage=Version 2.0.0-RC1 24/07/2009\n \
 EdgeQuery [-f filename][ -b date_time -s NSCL -d duration] -t [ms | msz | sac(def)] [-o filemask]\n \
    e.g.  java -jar /home/jsmith/bin/CWBQuery.jar -s \"IIAAK  LHZ00\" -b \"2007/05/06 21:11:52\" -d 3600 -t sac -o %N_%y_%j\n \
    OR    java -jar /home/jsmith/bin/CWBQuery.jar -f my_batch_file\n \
 Directory/Holdings:\n \
    -ls  List the data files available for queries (not generally useful to users)\n \
    -lsc List every channel its days of availability from begin time through duration (default last 15 days)\n \
         Use the -b and -d options to set limits on time interval of the channel list \n \
         This option can be cpu intensive if you ask for a long interval, so use only as needed.\n \
 Query Modes of operation :\n \
   Line mode (command line mode) do not use -f and include -s NSCL -b yyyy/mm/dd hh:mm:ss -d secs on line\n \
   File mode or batch mode:\n \
     Create a file with one line per query with lines like [QUERY SWITCHES][OUTPUT SWITCHES]:\n \
       example line :   '-s NSCL -b yyyy/mm/dd hh:mm:ss -d duration -t sac -o %N_%y_%j'\n \
     Then run EdgeQuery with  '-f filename' filename with list of SNCL start times and durations\n \
 Server selection (please use9 query.prop for this and not these switches) :\n \
    -h host IP or name of server default=" + host + " " + cwb + " which is set differently inside and outside the NEIC subnets.\n \
    #-hp    The public server is cwb-pub.cr.usgs.gov (137.227.230.1) do not get Meta-data (obsolete - use query.prop) \n \
    #-hi    internal is gcwb (136.177.24.70)\n \
    #-hr    The research CWB (136.177.30.235\n \
    -p port on server where server is running default=" + port\n \
            //System.out.println("       This computer reports is IP address as " + Util.getProperty("HostIP")\n \
 Query Switches (station and time interval limits) :\n \
    -s NSCL or REGEXP  (note: on many shells its best to put this argument in double quotes)\n \
       NNSSSSSCCCLL to specify a seed channel name. If < 12 characters, match any seednames starting\n \
           with those characters.  Example : '-s IUA' would return all IU stations starting with 'A' (ADK,AFI,ANMO,ANTO) \n \
       OR \n \
       REGEXP :'.' matches any character, [ABC] means one character which is A, or B or C The regexp is right padded with '.'\n \
           Example: '-s IUANMO.LH[ZN]..' returns the vertical and north component for LH channels at station(s) starting with 'ANMO'\n \
           '.*' matchs zero or more following characters (include in quotes as * has many meanings!\n \
           'AA|BB' means matches pattern AA or BB e.g.  'US.*|IU.*' matches the US and IU networks\n \
    -b begin time yyyy/mm/dd hh:mm:ss (normally enclose in quotes) or yyyy,doy-hh:mm:ss\n \
    -d nnnn[d] seconds of duration(default is 300 seconds) end with 'd' to indicate nnnn is in days\n \
    -nodups Eliminate any duplications on input.  Only use this if the duplications are massive!\n \
    -dbgdup Print out all duplicate packets as they are eliminated\n \
    -sacpz nm|um Request sac style response files in either nanometers (nm) or micrometers(um)\n \
 Output Controls : \n \
    -q Run in quiet mode (No progress or file status reporting)\n \
    -t [ms | msz | sac | dcc|dcc512|wf|wf1] output type.  \n \
        ms is raw blocks with gaps/overlaps (ext='.ms')\n \
        msz = is data output as continuous mini-seed with filling use -fill to set other fill values (ext='.msz')\n \
              can also be output as gappy miniseed with -msgaps NOTE: msz rounds times to nearest millsecond\n \
        sac = is Seismic Analysis Code format (see -fill for info on nodata code) (ext='.sac')\n \
        dcc = best effort reconciliation to 4096 byte mini-seed form.  Overlaps are eliminated. (ext='.msd'\n \
        dcc512 = best effort reconciliation to 512 byte mini-seed form.  Overlaps are eliminated. (ext='.msd'\n \
        null = do not create data file, return blocks to caller (for use from a user program)\n \
        wf or wf1 creates wfdisc and .w files - always use -o with -t wf1!\n \
    -o mask Put the output in the given filename described by the mask/tokens (Default : %N\n \
       Tokens: (Any non-tokens will be literally in the file name)\n \
         %N the whole seedname NNSSSSSCCCLL\n \
         %n the two letter SEED network          %s the 5 character SEED station code\n \
         %c the 3 character SEED channel         %l the two character location\n \
         %y Year as 4 digits                     %Y 2 character Year\n \
         %j Day of year (1-366)                  %J Julian day (since 1572)\n \
         %M 2 digit month                        %D 2 digit day of month\n \
         %h 2 digit hour                         %m 2 digit minute\n \
         %S 2 digit second                       %z zap all underscores from name\n \
   WF options :\n \
     -fap  output a frequency, amplitude, and phase file if metadata has an PNZ response\n \
   DCC[512] debug options:\n \
     -chk  Do a check of the input and output buffers(DEBUGGING)\n \
     -dccdbg Turn on debugging output(DEBUGGING)\n \
   SAC options :\n \
     -fill nnnnnn use nnnnnn as the fill value instead of -12345\n \
     -nogaps if present, any missing data in the interval except at the end results in no output file. A -sactrim is also done\n \
     -sactrim Trim length of returned time series so that no 'nodata' points are at the end of the buffer\n \
     -sacpz nm|um Request sac response files in either nanometers (nm) or micrometers(um)\n \
     -nometa Do not try to look up meta-data for orientation or coordinates or response\n \
   MSZ options :  NOTE : msz data has its times rounded to the nearest millisecond\n \
     -fill nnnnnn use nnnnnn as the fill value instead of -12345\n \
     -gaps if present, only displays a list of any gaps in the data - no output file is created.\n \
     -msb nnnn Set mini-seed block size to nnnn (512 and 4096 only)\n \
     -msgaps Process the data and have gaps in the output miniseed rather than filled values\n\n \
 Miscellaneous:\n \
     -e Exclude the non-public stations from a query (not valid outside of NEIC subnets)\n \
     -dbg Turn on debugging output to stdout\n \
     -hold[:nnn.nnn.nnn.nnn:pppp:type] send holdings from request to indicated server (NEIC use only)\n \
 Properties with defaults (Current setting in parenthesis possibly set by query.prop file) :\n \
    cwbip='' ( " + props.getString("cwbip") + ")\n \
    queryport=2061 (" + props.getString("queryport") + ")\n \
    metadataserver=136.177.24.70 (" + props.getString("metadataserver") + ")\n \

 